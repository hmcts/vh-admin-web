name: $(Date:yyyyMMddhhmm)-$(Rev:r)

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: VIH-9191-test-Acceptance-tests-in-PR-pipeline
      endpoint: hmcts
      
trigger: none

pr:
  - master

variables:
  - group: vh-github-app-credentials
  - group: vh-admin-web
  - name: run_acceptance_tests
    value: true

stages:
#####################################################
# CI Build Checks. ##################################
  - stage: CI_Build
    displayName: CI Build
    variables: 
      - template: variables/shared.yaml
        parameters:
          env: ''
    jobs:
      - job: CI_Helm
        displayName: "Helm CI"
        steps:
          - checkout: self

          - template: templates\Containerisation\helm\helm-lint.yaml@azTemplates
            parameters:
              chartPath: ${{ variables.chartPath }}
              chartValuesPath: ${{ variables.chartPath }}

      - job: UnitTests
        displayName: "Unit Tests"
        steps:
          - checkout: self

          - template: templates/sonarCloud/prepare.yml@azTemplates
            parameters:
              ExtraProperties: |
                sonar.exclusions=**/node_modules/**, **/*.spec.ts, *.spec.ts, **/ClientApp/src/*, **/ClientApp/coverage/**/*, **/Startup.cs, **/Program.cs, **/ConfigureServicesExtensions.cs, **/Swagger/*.cs
                sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/AdminWebsite/AdminWebsite/ClientApp/coverage/lcov.info
                sonar.typescript.exclusions=**/node_modules/**, **/typings.d.ts, **/main.ts, **/environments/environment*.ts, **/*routing.module.ts, **/api-client.ts
                sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)/Coverage/coverage.opencover.xml
                sonar.coverage.exclusions= **/AdminWebsite/Models/**, **/AdminWebsite.Testing.Common/**, AdminWebsite/Views/*, AdminWebsite/Pages/*, AdminWebsite.UserAPI.Client/*, AdminWebsite.AcceptanceTests/*
    
          - template: stages\dotnet-tests\unit-tests.yml@azTemplates
            parameters:
              #vstsFeedId: 'Video Hearings/vh-packages'
              nugetConfigPath: ${{ variables.app_path }} # Temp - Change To SDS Feed When Possible.
              unitTestProjectPath: "${{ variables.app_path }}/${{ variables.app_path }}.UnitTests"
              dotNetCoreVersion: '6.x'
              coverletCoverageExclusions:
                - "**/Testing.Common/**"
                - "AdminWebsite/Views/*"
                - "AdminWebsite/Pages/*"
                - "AdminWebsite.UserAPI.Client/*"
                - "AdminWebsite.AcceptanceTests/*"
              
          - template: templates/sonarCloud/runAnalysis.yml@azTemplates

#####################################################
# Pre Steps. ########################################
# Build Docker Image & Generate EF Script. ##########
  - stage: Dock
    displayName: Build Admin Web
    variables: 
      - template: variables/dev.yaml
      - template: variables/shared.yaml
        parameters:
          env: ${{ variables.env }}
      - group: vh-github-app-credentials
    jobs:
      - job: Dock
        displayName: "Build and Push Image ${{ variables.git_repo_name }}"
        steps:
          - checkout: self

          - template: templates\Github\get-app-token.yaml@azTemplates
            parameters:
              privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
              appId: $(gh_app_app_id)

          - template: templates\Github\bump-chart-versions.yaml@azTemplates
            parameters:
              chartName: ${{ variables.chartName }}
              chartPath: $(Build.SourcesDirectory)
              chartBranch: $(System.PullRequest.SourceBranch)
              githubToken: $(githubappinstall.token)
              githubUsername: $(gh_app_name)
              githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"
          
          - bash: |
              sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.sds.config
            displayName: Add NuGet Feed Authentication
            workingDirectory: ${{ variables.app_path }}

          - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates # Temp - Change nuget.config to nuget.sds.config.
            parameters:
              azureSubscription: ${{ variables.acrSubscription }}
              acrName: ${{ variables.acrName }}
              repositoryName:  ${{ variables.repositoryName }}

          - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.acrSubscription }}
              acrName: ${{ variables.acrName }}
              repositoryName:  ${{ variables.repositoryName }}
              imageName: "${{ replace(variables.git_repo_name, '-', '') }}"
              imageTags:
                - '${{ variables.prTagName }}'

      - ${{ if eq(variables.run_acceptance_tests, true) }}:
        - job: PublishAcceptanceTests
          displayName: Publish Acceptance Tests 
          variables:
            projectPath: "$(app_path)/$(app_path)"
          steps:
          - template: templates\dotnet\publish-acceptance-tests.yml@azTemplates
            parameters:
              netVersion: 6.x
              coreProjectPath: $(projectPath)
              nugetProjectPath: $(projectPath)
              nugetConfigPath: $(app_path)
              useNugetConfig: true
        

#####################################################
# Deploy Helm Chart to Dev. ######################### 
  - stage: Install
    dependsOn: Dock
    displayName: Deploy Helm Chart Dev AKS
    variables:
      - template: variables/dev.yaml
      - template: variables/shared.yaml
        parameters:
          env: ${{ variables.env }}
      - name: dnsRecordName
        value: vh-${{ variables.git_repo_name }}-${{ variables.prTagPrefix }}
      - group: vh-tenant-creds
    jobs:
      - job: helm_uninstall
        displayName: Uninstall Helm from Dev
        steps:

          - template: templates\Azure\Aks\get-active-cluster.yaml@azTemplates
            parameters:
              subscriptionName: "${{ variables.subscriptionName }}"
              environment: ${{ variables.env }}
            
          - template: templates/Containerisation/helm/helm-uninstall.yaml@azTemplates
            parameters:
              namespace: 'vh'
              releaseName: "${{ variables.chartName }}-${{ variables.prTagPrefix }}"
              azureSubscription: "${{ variables.subscriptionName }}"
              aksResourceGroupName: "$(aksCluster.resourceGroup)"
              aksClusterName: "$(aksCluster.name)"
      - job: aks_push
        displayName: Deploy To Dev AKS
        steps:

          - template: templates\Azure\AAD\apps\add-remove-replyruls--no-sc.yaml@azTemplates
            parameters:
              azureClientId: $(vh_client_id)
              azureClientSecret: $(vh_client_secret)
              azureTenant: $(vh_tenant_id)
              action: "add"
              domain: "https://${{ variables.dnsRecordName }}.${{ variables.dnsZone }}"
              name: "a${{ variables.gitRepoName }}.${{ variables.dnsZone }}"
              domainUris:  ${{ variables.app_redirect_uri }}

          - template: templates\Azure\Aks\get-active-cluster.yaml@azTemplates
            parameters:
              subscriptionName: "${{ variables.subscriptionName }}"
              environment: ${{ variables.env }}

          - template: templates/Containerisation/helm/helm-install.yaml@azTemplates
            parameters:
              privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
              appId: $(gh_app_app_id)
              envValuesTemplatePath: ${{ variables.envValuesTemplatePath }}
              envValuesPath: ${{ variables.envValuesPath }}
              acrName: ${{ variables.acrName }}
              repositoryName: ${{ variables.repositoryName }}
              prTagName: ${{ variables.prTagName }}
              releaseName: "${{ variables.chartName }}-${{ variables.prTagPrefix }}"
              dnsRecordName: ${{ variables.dnsRecordName }}
              dnsZone: ${{ variables.dnsZone }}
              env: ${{ variables.env }}
              chartName: ${{ variables.chartName }}
              chartPath: ${{ variables.chartPath }}
              subscriptionName: "${{ variables.subscriptionName }}"
              aksResourceGroupName: "$(aksCluster.resourceGroup)"
              aksClusterName: "$(aksCluster.name)"
              dnsSubscriptionName: "${{ variables.dnsZoneSubscription }}"
              dnsResourceGroupName: "${{ variables.dnsZoneResourceGroup }}"

      - ${{ if eq(variables.run_acceptance_tests, true) }}:
        - job: AcceptanceTestsDev
          dependsOn: aks_push
          displayName: Acceptance Tests Dev
          variables:
          - group: KinlyConfiguration_${{ variables.env }}
          - group: FeatureFlags_${{ variables.env}}
          - group: Saucelabs
          - group: vh-test-users
          - group: govuk-notify-${{ variables.env }}
          steps:
          - template: templates/dotnet/run-acceptance-tests.yml@azTemplates
            parameters:
              environment: ${{ variables.env }}
              azureSubscription: ${{ variables.subscriptionName }}
              acceptanceTestSettings:
                - name: VhServices:AdminWebUrl
                  value: https://vh-admin-web.${{ variables.env }}.platform.hmcts.net/
                - name: VhServices:AdminWebResourceId
                  value: https://vh-admin-web.${{ variables.env }}.platform.hmcts.net
                - name: VhServices:VideoApiUrl
                  value: https://vh-video-api.${{ variables.env }}.platform.hmcts.net/
                - name: VhServices:VideoApiResourceId
                  value: https://vh-video-api.${{ variables.env }}.platform.hmcts.net
                - name: VhServices:UserApiUrl
                  value: https://vh-user-api.${{ variables.env }}.platform.hmcts.net/
                - name: VhServices:UserApiResourceId
                  value: https://vh-user-api.${{ variables.env }}.platform.hmcts.net
                - name: VhServices:NotificationApiUrl
                  value: https://vh-notification-api.${{ variables.env }}.platform.hmcts.net/
                - name: VhServices:NotificationApiResourceId
                  value: https://vh-notification-api.${{ variables.env }}.platform.hmcts.net
                - name: VhServices:TestApiUrl
                  value: https://vh-test-api.${{ variables.env }}.platform.hmcts.net/
                - name: VhServices:TestApiResourceId
                  value: https://vh-test-api.${{ variables.env }}.platform.hmcts.net
                - name: VhServices:BookingsApiUrl
                  value: https://vh-bookings-api.${{ variables.env }}.platform.hmcts.net
                - name: VhServices:BookingsApiResourceId
                  value: https://vh-bookings-api.${{ variables.env }}.platform.hmcts.net
                - name: VhServices:LaunchDarklyClientId
                  value: "PLACEHOLDER"
                - name: VhServices:VideoWebUrl
                  value: https://vh-video-web.${{ variables.env }}.platform.hmcts.net/

                # Feature Toggle
                - name: FeatureToggle:SDK-Key
                  value: $(SDK-Key)

                # GOV Notify Configuration
                - name: NotifyConfiguration:ApiKey
                  value: $(notify-api-key)
                  
                # AzureAd
                - name: AzureAd:TenantId
                  value: azuread--tenantid
                  secret: true
                  keyVaultName: vh-infra-core-${{ variables.env }}

                - name: AzureAd:ClientId
                  value: azuread--clientid
                  secret: true
                  keyVaultName: vh-video-web-${{ variables.env }}

                - name: AzureAd:ClientSecret
                  value: azuread--clientsecret
                  secret: true
                  keyVaultName: vh-video-web-${{ variables.env }}

                - name: AzureAd:ResourceId
                  value: azuread--identifieruri
                  secret: true
                  keyVaultName: vh-video-web-${{ variables.env }}

                - name: AzureAd:PostLogoutRedirectUri
                  value: https://vh-admin-web.${{ variables.env }}.platform.hmcts.net/logout

                - name: AzureAd:RedirectUri
                  value: https://vh-admin-web.${{ variables.env }}.platform.hmcts.net/home

                - name: AzureAd:TemporaryPassword
                  value: azuread--temporarypassword
                  secret: true
                  keyVaultName: vh-infra-core-${{ variables.env }}

                # Testing
                - name: TestUserSecrets:TestUsernameStem
                  value: $(TestUserSecrets:TestUsernameStem)
                - name: TestUserSecrets:TestUserPassword
                  value: $(TestUserSecrets:TestApiUserPassword)

                  # Kinly
                - name: KinlyConfiguration:ConferencePhoneNumber
                  value: $(ConferencePhoneNumber)
                - name: KinlyConfiguration:ConferencePhoneNumberWelsh
                  value: $(ConferencePhoneNumberWelsh)
                - name: KinlyConfiguration:JoinByPhoneFromDate
                  value: $(JoinByPhoneFromDate)
                  
                # SauceLabs
                - name: Saucelabs:Username
                  value: $(Saucelabs:Username)
                - name: Saucelabs:AccessKey
                  value: $(Saucelabs:AccessKey)
                - name: Saucelabs:RealDeviceApiKey
                  value: $(RealDeviceApiKey)

                # WowzaConfiguration
                - name: WowzaConfiguration:StorageAccountName
                  value: wowzaconfiguration--storage-account
                  secret: true
                  keyVaultName: vh-infra-core-${{ variables.env }}
                - name: WowzaConfiguration:StorageAccountKey
                  value: wowzaconfiguration--storageaccountkey
                  secret: true
                  keyVaultName: vh-infra-core-${{ variables.env }}
                - name: WowzaConfiguration:StorageContainerName
                  value: wowzaconfiguration--storage-account-container
                  secret: true
                  keyVaultName: vh-infra-core-${{ variables.env }}
                  
                # Ejud - test setting only
                - name: UsingEjud
                  value: $(UsingEjud)
