parameters:
- name: deploymentBranch
  displayName: Branch to Deploy
  type: string
  default: refs/heads/master

- name: environment
  displayName: Environment
  type: string
  default: Sandbox
  values:
  - Preview
  - Dev
  - AAT
  - Sandbox
  - Test1
  - Test2
  - Demo
  - Preprod
  - Prod

- name: RunZap
  displayName: Execute ZAP Tests
  type: boolean
  default: false

- name: runACTests
  displayName: Run Smoke Checks
  type: boolean
  default: true

- name: prodEnvs
  displayName: Environments Using Prod Subscription
  type: object
  default:
    - Prod
    - Preprod

# Set variables once
variables:
  - group: vh-domains-and-urls
  - group: vh-apps-settings-generic
  - group: vh-admin-web
  - group: vh test users
  - group: Saucelabs
  - ${{ if ne(variables['Build.Reason'], 'ResourceTrigger') }}:
    - ${{ if containsValue(parameters.prodEnvs, parameters.environment) }}:
      - group: vh-prod
    - ${{ if not(containsValue(parameters.prodEnvs, parameters.environment)) }}:
      - group: vh-preview
  - ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
    - ${{ if or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')) }}:
      - group: vh-prod
    - ${{ if not(or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))) }}:
      - group: vh-preview

trigger: none
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts
  pipelines:
  - pipeline: CI
    source: hmcts.vh-admin-web
    trigger:
      enabled: true
      branches:
        - master
        - hotfix/*
        - release/*

stages:
  - template: templates/vh-release.yml@templates
    parameters:
      ${{ if ne(variables['Build.Reason'], 'ResourceTrigger') }}:
        environments:
          - ${{ parameters.environment }}
        deploymentBranch: ${{ parameters.deploymentBranch }}
      ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
        deploymentBranch: resources.pipeline.CI.sourceBranch
      releaseParameters:
        runZapTests: ${{ parameters.RunZap }}
        subscription: $(env_Subscription)
        secrets_KeyVault: $(env_Secret_KeyVault)
        secrets_Subscription: $(env_Secret_Subscription)
        devOpsResource: vh_admin_web
        appName: vh-admin-web-$(environment)
        resourceGroup: vh-admin-web-$(environment)
        testCaseFilter: TestCategory=Smoketest
        runACTests: ${{ parameters.runACTests }}
        dependentApps:
        - name: vh-user-api-$(environment)
          resourceGroup: vh-user-api-$(environment)
          healthEndpoint: $(user_api_url)healthcheck/health
        - name: vh-bookings-api-$(environment)
          resourceGroup: vh-bookings-api-$(environment)
          healthEndpoint: $(bookings_api_url)healthcheck/health
        - name: vh-video-api-$(environment)
          resourceGroup: vh-video-api-$(environment)
          healthEndpoint: $(video_api_url)healthcheck/health
        - name: vh-notification-api-$(environment)
          resourceGroup: vh-notification-api-$(environment)
          healthEndpoint: $(notification_api_url)healthcheck/health
        - name: vh-test-api-$(environment)
          resourceGroup: vh-test-api-$(environment)
          healthEndpoint: $(test_api_url)health/health       
        variables:
          - group: vh-wowza-dev
            env:
             - Preview
             - Dev
             - AAT
             - Sandbox
             - Test1
             - Test2
          - group: vh-wowza-demo
            env:
             - Demo
          - group: vh-wowza-preprod
            env:
             - Preprod
          - group: vh-wowza-prod
            env:
             - Prod
          - group: KinlyConfiguration_Dev
            env:
             - Sandbox
          - group: KinlyConfiguration_Test
            env:
             - Preview
             - Dev
             - AAT
             - Test1
             - Test2
          - group: KinlyConfiguration_Test2
            env:
             - Demo
          - group: KinlyConfiguration_Preprod
            env:
             - Preprod
          - group: KinlyConfiguration_Prod
            env:
             - Prod
          - name: AppUri
            value: $(AppUri_Prod)
            env:
             - Prod
          - name: VanityUrl
            value: $(admin_web_domain_prod)
            env:
              - Prod
              - Preprod
          - group: govuk-notify-preview
            env:
             - Preview
          - group: govuk-notify-dev
            env:
             - Dev
          - group: govuk-notify-aat
            env:
             - AAT
          - group: govuk-notify-sandbox
            env:
             - Sandbox
          - group: govuk-notify-test1
            env:
             - Test1
             - Test2
          - group: govuk-notify-demo
            env:
             - Demo
          - group: govuk-notify-preprod
            env:
             - PreProd
          - group: govuk-notify-prod
            env:
             - Prod
        appSettings:
          - name: ApplicationInsights:InstrumentationKey
            value: vh-core-infra-AppInsightsKey
            secret: true
          - name: AppInsightsKey
            value: vh-core-infra-AppInsightsKey
            secret: true
          - name: IsLive
            value: $(IsLive)

          # AzureAd
          - name: AzureAd:ClientId
            value: vh-admin-web-appid-v2
            secret: true
          - name: AzureAd:ClientSecret
            value: vh-admin-web-key-v2
            secret: true
          - name: AzureAd:PostLogoutRedirectUri
            slot:
              deployment:
                value: $(admin_web_url_staging)logout
              active:
                value: $(admin_web_url)logout
          - name: AzureAd:RedirectUri
            slot:
              deployment:
                value: $(admin_web_url_staging)home
              active:
                value: $(admin_web_url)home
          - name: AzureAd:TenantId
            value: tenantid
            secret: true
              
          # Testing
          - name: TestUserSecrets:TestUsernameStem
            value: $(TestUserSecrets:TestUsernameStem)
          - name: runACTests
            value: ${{ parameters.runACTests }}

          # VhServices
          - name: VhServices:BookingsApiResourceId
            value: vh-bookings-api-identifieruris
            secret: true
          - name: VhServices:BookingsApiUrl
            value: $(bookings_api_url)
          - name: VhServices:UserApiResourceId
            value: vh-user-api-identifieruris
            secret: true
          - name: VhServices:UserApiUrl
            value: $(user_api_url)
          - name: VhServices:VideoApiResourceId
            value: vh-video-api-identifieruris
            secret: true
          - name: VhServices:VideoApiUrl
            value: $(video_api_url)
          - name: VhServices:NotificationApiResourceId
            value: vh-notification-api-identifieruris
            secret: true
          - name: VhServices:NotificationApiUrl
            value: $(notification_api_url)
          - name: VhServices:ValidateEmail
            value: $(reformemail)

          # GOV Notify Configuration
          - name: NotifyConfiguration:ApiKey
            value: $(notify-api-key)
            
            # Kinly
          - name: KinlyConfiguration:ConferencePhoneNumber
            value: $(ConferencePhoneNumber)
          - name: KinlyConfiguration:JoinByPhoneFromDate
            value: $(JoinByPhoneFromDate)
            
        acceptanceTestSettings:
          # VhServices
          - name: VhServices:AdminWebUrl
            value: $(admin_web_url_staging)
          - name: VhServices:AdminWebResourceId
            value: vh-admin-web-identifieruris
            secret: true
          - name: VhServices:VideoApiUrl
            value: $(video_api_url)
          - name: VhServices:VideoApiResourceId
            value: vh-video-api-identifieruris
            secret: true
          - name: VhServices:UserApiUrl
            value: $(user_api_url)
          - name: VhServices:UserApiResourceId
            value: vh-user-api-identifieruris
            secret: true
          - name: VhServices:TestApiUrl
            value: $(test_api_url)
          - name: VhServices:TestApiResourceId
            value: vh-test-api-identifieruris
            secret: true  
          - name: VhServices:BookingsApiUrl
            value: $(bookings_api_url)
          - name: VhServices:BookingsApiResourceId
            value: vh-bookings-api-identifieruris
            secret: true
          - name: VhServices:NotificationApiResourceId
            value: vh-notification-api-identifieruris
            secret: true
          - name: VhServices:NotificationApiUrl
            value: $(notification_api_url)

          # AzureAd
          - name: AzureAd:TenantId
            value: tenantid
            secret: true
          - name: AzureAd:ClientId
            value: vh-video-web-appid-v2
            secret: true
          - name: AzureAd:ClientSecret
            value: vh-video-web-key-v2
            secret: true
          - name: AzureAd:PostLogoutRedirectUri
            slot: true
          - name: AzureAd:RedirectUri
            slot: true
          - name: AzureAd:TemporaryPassword
            value: $(TemporaryPassword)

          # Testing
          - name: TestUserSecrets:TestUsernameStem
            value: $(TestUserSecrets:TestUsernameStem)
          - name: TestUserSecrets:TestUserPassword
            value: $(TestUserSecrets:TestApiUserPassword)

          # GOV Notify Configuration
          - name: NotifyConfiguration:ApiKey
            value: $(notify-api-key)
            
          # Kinly
          - name: KinlyConfiguration:ConferencePhoneNumber
            value: $(ConferencePhoneNumber)
          - name: KinlyConfiguration:JoinByPhoneFromDate
            value: $(JoinByPhoneFromDate)
            
          # SauceLabs
          - name: Saucelabs:Username
            value: $(Saucelabs:Username)
          - name: Saucelabs:AccessKey
            value: $(Saucelabs:AccessKey)
          - name: Saucelabs:RealDeviceApiKey
            value: $(RealDeviceApiKey)

          # WowzaConfiguration
          - name: WowzaConfiguration:StorageAccountName
            value: $(wowza_storageAccountName)
          - name: WowzaConfiguration:StorageAccountKey
            value: $(wowza_storageAccountKey)
          - name: WowzaConfiguration:StorageContainerName
            value: $(wowza_storageContainerName)

          # Ejud - test setting only
          - name: UsingEjud
            value: $(UsingEjud)