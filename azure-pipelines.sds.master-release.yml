name: $(Date:yyyyMMddHHmm)-$(Rev:r)

trigger:
  - master

pr: none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: apply-git-version-before-docker-build
      endpoint: hmcts

parameters:
- name: stages
  type: object
  default:
  - env: 'dev'
    buildPushImage: true
    pushHelmChart: true
  - env: 'demo'
    requireApproval: true
    buildPushImage: true
    pushHelmChart: false
  - env: 'test'
    requireApproval: true
    buildPushImage: true
    pushHelmChart: false

pool: 
  vmImage: ubuntu-22.04

stages:
- stage: Pre_Release_Tasks
  displayName: Pre-Release Tasks
  variables:
    - template: variables/shared.yaml
  jobs:
    - job: GitVersion
      displayName: "GitVersion"
      steps:
        - checkout: self
          fetchTags: true
      
        - task: gitversion/setup@3.0.3
          displayName: Install GitVersion
          inputs:
            versionSpec: '5.11.1'

        - task: gitversion/execute@3.0.3
          displayName: Determine Version
          inputs:
            useConfigFile: true
            configFilePath: ${{ variables.git_version_config_path }}
#####################################################
# CI Build Tasks. ###################################
- stage: CI_Build
  dependsOn: []
  variables:
    - template: variables/shared.yaml
  displayName: Test & Sonar
  jobs:
    - job: UnitAndIntegrationTests
      displayName: 'Unit and Integration Tests'
      steps:
        - checkout: self

        - template: templates/dotnet/build-test-analyse.yml@azTemplates
          parameters:
            dotnetVersion: ${{ variables.dotnetVersion }}
            nugetConfigPath: nuget.config
            appName: ${{ variables.appName }}
            dockerComposeTestFile: docker-compose.tests.yml
            publishNodeTests: true
            nodeTestResultFolder: $(System.DefaultWorkingDirectory)/AdminWebsite/AdminWebsite/ClientApp
            sonarExtraProperties: |
              sonar.exclusions=**/node_modules/**, **/*.spec.ts, *.spec.ts, **/ClientApp/src/*, **/ClientApp/src/app/testing/**, **/ClientApp/coverage/**/*, **/Startup.cs, **/Program.cs, **/ConfigureServicesExtensions.cs, **/Swagger/*.cs, **/src/app/testing/data/*.ts, **/auth-config.module.ts
              sonar.cs.opencover.reportsPaths=$(System.DefaultWorkingDirectory)/coverage.opencover.xml
              sonar.javascript.lcov.reportPaths=**/ClientApp/coverage/lcov.info
              sonar.typescript.exclusions=**/node_modules/**, **/typings.d.ts, **/main.ts, **/environments/environment*.ts, **/*routing.module.ts, **/api-client.ts
              sonar.coverage.exclusions=**/AdminWebsite/Configuration/**, **/AdminWebsite/Security/**, **/AdminWebsite.Testing.Common/**, **/AdminWebsite/Views/*, **/AdminWebsite/Pages/*, **/AdminWebsite.AcceptanceTests/*, **/AdminWebsite.*Tests/*
              sonar.issue.ignore.multicriteria=e1, e2, e3
              sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S6544
              sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts
              sonar.issue.ignore.multicriteria.e2.ruleKey=typescript:S107
              sonar.issue.ignore.multicriteria.e2.resourceKey=**/*.ts
              sonar.issue.ignore.multicriteria.e3.ruleKey=csharpsquid:S107
              sonar.issue.ignore.multicriteria.e3.resourceKey=**/*.cs

#####################################################
# Manual Approval ###################################
- ${{ each stage in parameters.stages }}:
  - stage: Manual_Approval_${{ stage.env }}
    displayName: Approval ${{ stage.env }}
    condition: eq('${{ stage.requireApproval }}', true)
    jobs:
      - job: Approve
        displayName: 'Approve to ${{ stage.env }}'
        pool: server
        timeoutInMinutes: 10080 # 7 Days
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 10080 # 7 Days
            inputs:
              instructions: 'Please Approve run to ${{ stage.env }}'
              onTimeout: 'reject'

#####################################################
# Build Docker Image & Push. ########################
  - ${{ if eq(stage.buildPushImage, true)  }}:
    - stage: Docker_Build_Push_${{ stage.env }}
      displayName: Build & Push ${{ stage.env }}
      dependsOn:
      - ${{ if stage.requireApproval }}:
        - Manual_Approval_${{ stage.env }}
      variables:
        - template: variables/${{ stage.env }}.yaml
        - template: variables/shared.yaml
      jobs:
      - job: Docker_Build_${{ stage.env }}
        displayName: Docker Build and Push ${{ stage.env }}
        steps:
        - checkout: self
          fetchTags: true

        - bash: |
            sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
          displayName: Add NuGet Feed Authentication
          workingDirectory: $(app_path)
      
        - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
          parameters:
            azureSubscription: ${{ variables.acrSubscription }}
            acrName: ${{ variables.acrName }}
            repositoryName:  ${{ variables.repositoryName }}
          
        - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
          parameters:
            azureSubscription: ${{ variables.acrSubscription }}
            acrName: ${{ variables.acrName }}
            repositoryName:  ${{ variables.repositoryName }}
            imageName: "${{ variables.imageName }}"
            imageTags:
              - '${{ variables.imageTagName }}'

  #########################################
  # Push Helm Charts to Repo. #############
  - ${{ if eq(stage.pushHelmChart, true) }}:
    - stage: Helm_${{ stage.env }}
      displayName: Push Helm Charts ${{ stage.env }}
      dependsOn: Docker_Build_Push_${{ stage.env }}
      variables:
      - template: variables/dev.yaml
      - template: variables/shared.yaml
      - group: vh-github-app-credentials
      jobs:
      - job: Helm_${{ stage.env }}
        displayName: Helm Push ${{ stage.env }}
        steps:
        - checkout: self

        - template: templates\Github\get-app-token.yaml@azTemplates
          parameters:
            privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
            appId: $(gh_app_app_id)

        - template: templates\Github\push-to-helm-chart-repo.yaml@azTemplates
          parameters:
            chartName: ${{ variables.chartName }}
            chartPath: ${{ variables.chartPath }}
            githubToken: $(githubappinstall.token)
            githubUsername: $(gh_app_name)
            githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"
            subDirectory: ${{ variables.subDirectory }}