name: $(Date:yyyyMMddHHmm)-$(Rev:r)

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: VIH-0000-Test-Dotnet-Branch
      endpoint: hmcts

pool:
  vmImage: ubuntu-22.04

trigger: none

pr: none

variables:
  - group: vh-github-app-credentials
  - group: vh-admin-web
  - name: run_acceptance_tests
    value: false

jobs:
- job: UnitAndIntegrationTests
  displayName: "Unit and Integration Tests"
  steps:
    - checkout: self

    - template: templates/dotnet/build-test-analyse.yml@azTemplates
      parameters:
        dotnetVersion: ${{ variables.dotnetVersion }}
        nugetConfigPath: nuget.config
        appName: ${{ variables.appName }}
        dockerComposeTestFile: docker-compose.tests.yml
        publishNodeTests: true
        nodeTestResultFolder: $(System.DefaultWorkingDirectory)/AdminWebsite/AdminWebsite/ClientApp
        sonarExtraProperties: |
          sonar.exclusions=**/node_modules/**, **/*.spec.ts, *.spec.ts, **/ClientApp/src/*, **/ClientApp/src/app/testing/**, **/ClientApp/coverage/**/*, **/Startup.cs, **/Program.cs, **/ConfigureServicesExtensions.cs, **/Swagger/*.cs, **/src/app/testing/data/*.ts, **/auth-config.module.ts
          sonar.cs.opencover.reportsPaths=$(System.DefaultWorkingDirectory)/coverage.opencover.xml
          sonar.javascript.lcov.reportPaths=**/ClientApp/coverage/lcov.info
          sonar.typescript.exclusions=**/node_modules/**, **/typings.d.ts, **/main.ts, **/environments/environment*.ts, **/*routing.module.ts, **/api-client.ts
          sonar.coverage.exclusions=**/AdminWebsite/Configuration/**, **/AdminWebsite/Security/**, **/AdminWebsite.Testing.Common/**, **/AdminWebsite/Views/*, **/AdminWebsite/Pages/*, **/AdminWebsite.AcceptanceTests/*, **/AdminWebsite.*Tests/*
          sonar.issue.ignore.multicriteria=e1
          sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S6544
          sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts

    #####################################################
  # Build Docker Image. ###############################
  - stage: Dock
    displayName: Docker Build & Push Image
    variables:
      - template: variables/dev.yaml
      - template: variables/shared.yaml
        parameters:
          env: ${{ variables.env }}
      - group: vh-github-app-credentials
    jobs:
      - job: Dock
        displayName: "Build and Push Image ${{ variables.git_repo_name }}"
        steps:
          - checkout: self

          - template: templates\Github\get-app-token.yaml@azTemplates
            parameters:
              privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
              appId: $(gh_app_app_id)

          - template: templates\Github\bump-chart-versions.yaml@azTemplates
            parameters:
              chartName: ${{ variables.chartName }}
              chartPath: $(Build.SourcesDirectory)
              chartBranch: $(System.PullRequest.SourceBranch)
              githubToken: $(githubappinstall.token)
              githubUsername: $(gh_app_name)
              githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"

          - bash: |
              sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
            displayName: Add NuGet Feed Authentication
            workingDirectory: ${{ variables.app_path }}

          - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.acrSubscription }}
              acrName: ${{ variables.acrName }}
              repositoryName: ${{ variables.repositoryName }}

          - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.acrSubscription }}
              acrName: ${{ variables.acrName }}
              repositoryName: ${{ variables.repositoryName }}
              imageName: "${{ replace(variables.git_repo_name, '-', '') }}"
              imageTags:
                - "${{ variables.prTagName }}"
