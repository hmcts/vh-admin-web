<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <PublishRunWebpack>true</PublishRunWebpack>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
    <ProjectGuid>4ACDEFE1-58CD-4E6B-A11D-FD219633B38E</ProjectGuid>
    <LangVersion>latestmajor</LangVersion>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <NoWarn>$(NoWarn);1591</NoWarn>
    <DocumentationFile>
    </DocumentationFile>
    <UserSecretsId>f99a3fe8-cf72-486a-b90f-b65c27da84ee</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>
  <PropertyGroup>
    <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.Uris" Version="6.0.3" />
    <PackageReference Include="BookingsApi.Client" Version="1.51.17-pr-0831-0009" />
    <PackageReference Include="LaunchDarkly.ServerSdk" Version="7.0.3" />
    <PackageReference Include="MicroElements.Swashbuckle.FluentValidation" Version="5.7.0" />
    <PackageReference Include="Microsoft.Identity.Client" Version="4.51.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.17.0" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="10.4.0" />
    <PackageReference Include="Microsoft.ApplicationInsights" Version="2.21.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.21.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.9" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.9" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.9" />
    <PackageReference Include="Microsoft.Graph" Version="1.21.0" />
    <PackageReference Include="Microsoft.OpenApi" Version="1.4.2" />
    <PackageReference Include="NotificationApi.Client" Version="1.44.2" />
    <PackageReference Include="NWebsec.AspNetCore.Middleware" Version="3.0.0" />
    <PackageReference Include="Polly" Version="7.2.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.5.0" />
    <PackageReference Include="SonarAnalyzer.CSharp" Version="8.54.0.64047">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="TimeZoneConverter" Version="6.0.1" />
    <PackageReference Include="UserApi.Client" Version="1.44.2" />
    <PackageReference Include="VH.Core.Configuration" Version="0.1.13" />
    <PackageReference Include="VideoApi.Client" Version="1.49.4" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\e2e\features\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\e2e\features\**" />
    <Content Include="ClientApp\src\app\common\formatters\format-short-duration.spec.ts" />
    <Content Include="ClientApp\src\app\common\formatters\format-short-duration.ts" />
    <EmbeddedResource Remove="ClientApp\e2e\features\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\e2e\features\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <Compile Remove="ClientApp\.angular\**" />
    <EmbeddedResource Remove="ClientApp\.angular\**" />
    <Content Remove="ClientApp\.angular\**" />
    <None Remove="ClientApp\.angular\**" />
    <Compile Remove="ClientApp\coverage\**" />
    <EmbeddedResource Remove="ClientApp\coverage\**" />
    <Content Remove="ClientApp\coverage\**" />
    <None Remove="ClientApp\coverage\**" />
    <Compile Remove="ClientApp\dist\**" />
    <EmbeddedResource Remove="ClientApp\dist\**" />
    <Content Remove="ClientApp\dist\**" />
    <None Remove="ClientApp\dist\**" />
    <Compile Remove="ClientApp\jasmine-tests\**" />
    <EmbeddedResource Remove="ClientApp\jasmine-tests\**" />
    <Content Remove="ClientApp\jasmine-tests\**" />
    <None Remove="ClientApp\jasmine-tests\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\common\formatters\sanitize-input-text.ts" />
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="ClientApp\dist\assets\images\favicons\manifest.json" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish" Condition=" '$(PublishRunWebpack)' == 'true' ">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build-prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
